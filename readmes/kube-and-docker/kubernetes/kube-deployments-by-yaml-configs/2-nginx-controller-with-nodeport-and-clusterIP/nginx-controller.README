=====================================================Nginx-controller-with-NodePort-and-clusterIP==============================================

url referred: https://docs.k0sproject.io/v1.24.4+k0s.0/examples/nginx-ingress/
-----------------------------------------------------------------------------------------------------------------------------------------------

Apply nginx config yaml from outsource

    D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/baremetal/deploy.yaml

        namespace/ingress-nginx created
        serviceaccount/ingress-nginx created
        serviceaccount/ingress-nginx-admission created
        role.rbac.authorization.k8s.io/ingress-nginx created
        role.rbac.authorization.k8s.io/ingress-nginx-admission created
        clusterrole.rbac.authorization.k8s.io/ingress-nginx created
        clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created
        rolebinding.rbac.authorization.k8s.io/ingress-nginx created
        rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
        clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created
        clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
        configmap/ingress-nginx-controller created
        service/ingress-nginx-controller created
        service/ingress-nginx-controller-admission created
        deployment.apps/ingress-nginx-controller created
        job.batch/ingress-nginx-admission-create created
        job.batch/ingress-nginx-admission-patch created
        ingressclass.networking.k8s.io/nginx created
        validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created

-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl get pods -n ingress-nginx

    NAME                                        READY   STATUS              RESTARTS   AGE
    ingress-nginx-admission-create-jb95k        0/1     Completed           0          11s
    ingress-nginx-admission-patch-75ht5         0/1     Completed           1          11s
    ingress-nginx-controller-675bfc9f4b-q4vnq   0/1     ContainerCreating   0          11s

D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl get pods -n ingress-nginx

    NAME                                        READY   STATUS      RESTARTS   AGE
    ingress-nginx-admission-create-jb95k        0/1     Completed   0          25s
    ingress-nginx-admission-patch-75ht5         0/1     Completed   1          25s
    ingress-nginx-controller-675bfc9f4b-q4vnq   0/1     Running     0          25s
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl get services -n ingress-nginx

    NAME                                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE
    ingress-nginx-controller             NodePort    10.96.1.99      <none>        80:32700/TCP,443:32043/TCP   27s
    ingress-nginx-controller-admission   ClusterIP   10.101.248.17   <none>        443/TCP                      27s
-----------------------------------------------------------------------------------------------------------------------------------------------

If this is only instance of the Ingresss-NGINX controller, you should add the annotation

    D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl -n ingress-nginx annotate ingressclasses nginx ingressclass.kubernetes.io/is-default-class="true"
    ingressclass.networking.k8s.io/nginx annotate
-----------------------------------------------------------------------------------------------------------------------------------------------

Till now nginx server has been created, but the nodeport service of the nginx has no external IP to curl or hit from the browser, so minikube tunneling

    D:\React\react-webpack-typescript\kubectl-deployments-yaml>minikube service ingress-nginx-controller --url

        X Exiting due to SVC_NOT_FOUND: Service 'ingress-nginx-controller' was not found in 'default' namespace.
        You may select another namespace by using 'minikube service ingress-nginx-controller -n <namespace>'. Or list out all the services using 'minikube service list'


    D:\React\react-webpack-typescript\kubectl-deployments-yaml>minikube service ingress-nginx-controller --url -n ingress-nginx
    
        http://127.0.0.1:50524
        http://127.0.0.1:50525
        ! Because you are using a Docker driver on windows, the terminal needs to be open to run it.

-----------------------------------------------------------------------------------------------------------------------------------------------

Minikube addons to enable ingress.
    command: minikube addons enable ingress

-----------------------------------------------------------------------------------------------------------------------------------------------

Apply all yaml configs for deployment - deployment, service in one yaml
    D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>kubectl apply -f nginx-dep-all-configs.yaml

        namespace/shopping-cart created
        deployment.apps/shopping-cart-deployment-nginx created
        service/web-server-service created
        ingress.networking.k8s.io/web-server-ingress created
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>kubectl get svc -n shopping-cart

    NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
    web-server-service   ClusterIP   10.109.247.195   <none>        8080/TCP   109s
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>kubectl get all -n shopping-cart

    NAME                                                  READY   STATUS    RESTARTS   AGE
    pod/shopping-cart-deployment-nginx-649f7bdb55-jw97n   1/1     Running   0          4m56s

    NAME                         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
    service/web-server-service   ClusterIP   10.109.247.195   <none>        8080/TCP   4m56s

    NAME                                             READY   UP-TO-DATE   AVAILABLE   AGE
    deployment.apps/shopping-cart-deployment-nginx   1/1     1            1           4m56s

    NAME                                                        DESIRED   CURRENT   READY   AGE
    replicaset.apps/shopping-cart-deployment-nginx-649f7bdb55   1         1         1       4m56s
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>minikube service ingress-nginx-controller --url -n ingress-nginx
    http://127.0.0.1:51799
    http://127.0.0.1:51800
    ! Because you are using a Docker driver on windows, the terminal needs to be open to run it.

*******************Not working - Need to check: The nginx is not connecting to the ingress controllers to route to the desired pod***************

-----------------------------------------------------------------------------------------------------------------------------------------------

Reference url for ingress controller without nginx:
    https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/

Oracle: Setting Up an Nginx Ingress Controller on a Cluster
    https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengsettingupingresscontroller.htm