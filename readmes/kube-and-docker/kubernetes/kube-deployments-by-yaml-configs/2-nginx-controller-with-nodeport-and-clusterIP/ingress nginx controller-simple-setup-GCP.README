
**************************************************************Command Prompt**************************************************************

C:\Users\user>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx/
"ingress-nginx" already exists with the same configuration, skipping

C:\Users\user>helm install my-release ingress-nginx/ingress-nginx
NAME: my-release
LAST DEPLOYED: Sat Apr 13 21:12:20 2024
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
The ingress-nginx controller has been installed.
It may take a few minutes for the load balancer IP to be available.
You can watch the status by running 'kubectl get service --namespace default my-release-ingress-nginx-controller --output wide --watch'

An example Ingress that makes use of the controller:
  apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: example
    namespace: foo
  spec:
    ingressClassName: nginx
    rules:
      - host: www.example.com
        http:
          paths:
            - pathType: Prefix
              backend:
                service:
                  name: exampleService
                  port:
                    number: 80
              path: /
    # This section is only required if TLS is to be enabled for the Ingress
    tls:
      - hosts:
        - www.example.com
        secretName: example-tls

If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

  apiVersion: v1
  kind: Secret
  metadata:
    name: example-tls
    namespace: foo
  data:
    tls.crt: <base64 encoded cert>
    tls.key: <base64 encoded key>
  type: kubernetes.io/tls

C:\Users\user>

**************************************************************Vs code**************************************************************

PS D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp> kubectl apply -f my-app.yaml
deployment.apps/my-deployment created
service/my-service created
PS D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp> kubectl apply -f my-ingress.yaml
ingress.networking.k8s.io/my-ingress created
PS D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp> kubectl get svc
NAME                                            TYPE           CLUSTER-IP      EXTERNAL-IP      PORT(S)                      AGE
kubernetes                                      ClusterIP      10.49.224.1     <none>           443/TCP                      33d
my-release-ingress-nginx-controller             LoadBalancer   10.49.230.120   34.132.242.171   80:30025/TCP,443:31824/TCP   32m
my-release-ingress-nginx-controller-admission   ClusterIP      10.49.232.220   <none>           443/TCP                      32m
my-service                                      ClusterIP      10.49.229.218   <none>           80/TCP                       56s
PS D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp> kubectl get ingress
NAME         CLASS    HOSTS   ADDRESS   PORTS   AGE
my-ingress   <none>   *                 80      28s
PS D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp> kubectl get ingress
NAME         CLASS    HOSTS   ADDRESS   PORTS   AGE
my-ingress   <none>   *                 80      89s
PS D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp> kubectl get ingress
NAME         CLASS    HOSTS   ADDRESS         PORTS   AGE
my-ingress   <none>   *       34.49.118.174   80      37m
PS D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp> 

---using Host---
D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\basic-setup>kubectl get ingress
NAME         CLASS    HOSTS           ADDRESS         PORTS   AGE
my-ingress   <none>   myingress.com   34.49.157.223   80      2m34s
**************************************************************Yaml configs**************************************************************

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec:
  selector:
    matchLabels:
      app: my-app
  replicas: 1
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
        - name: my-app
          image: us-central1-docker.pkg.dev/ultimate-bit-416621/my-artifact-registry/sample-image:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: my-app
  ports:
    - port: 80
	
---without host---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-service
                port:
                  number: 80
				  
----with host---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
    - host: myingress.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-service
                port:
                  number: 80

*******************************************************************************************************************
Video Ref: 

Ingress try:

1. https://www.youtube.com/watch?v=vrULnFYI_cY -- helm -- https://helm.sh/
	install helm: https://helm.sh/docs/intro/install/
2. https://www.youtube.com/watch?v=QYJarZZXuNA -- ingress

Git: https://github.com/cloudxlab/minikube-static-app/tree/main/k8s


Welcome to Cloud Shell! Type "help" to get started.
Your Cloud Platform project in this session is set to ultimate-bit-416621.
Use “gcloud config set project [PROJECT_ID]” to change to a different project.
mytheeswaran93@cloudshell:~ (ultimate-bit-416621)$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
mytheeswaran93@cloudshell:~ (ultimate-bit-416621)$ ls
get_helm.sh  README-cloudshell.txt
mytheeswaran93@cloudshell:~ (ultimate-bit-416621)$ chmod 700 get_helm.sh
mytheeswaran93@cloudshell:~ (ultimate-bit-416621)$ ./get_helm.sh
Helm v3.14.3 is available. Changing from version v3.9.3.
Downloading https://get.helm.sh/helm-v3.14.3-linux-amd64.tar.gz
Verifying checksum... Done.
Preparing to install helm into /usr/local/bin
helm installed into /usr/local/bin/helm
mytheeswaran93@cloudshell:~ (ultimate-bit-416621)$ helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx/
"ingress-nginx" has been added to your repositories
mytheeswaran93@cloudshell:~ (ultimate-bit-416621)$ helm install my-release ingress-nginx/ingress-nginx
Error: INSTALLATION FAILED: Kubernetes cluster unreachable: Get "http://localhost:8080/version": dial tcp 127.0.0.1:8080: connect: connection refused