1. Ingress-nginx controller Installation using Helm chart reference used:

	Step 1. Install ingress-nginx-controller using Helm:
		helm documentation: https://helm.sh/
		install helm: https://helm.sh/docs/intro/install/
			
	Step 2. Deploy resources and ingress rules:

	Git: https://github.com/cloudxlab/minikube-static-app/tree/main/k8s
	
	Youtube refs:
		https://www.youtube.com/watch?v=vrULnFYI_cY [install ingress-nginx usinh helm]
		https://www.youtube.com/watch?v=QYJarZZXuNA [deploying resources]

2. Helm command format and commands

    Creating a repo and downloading chart
        helm repo add <repo-name> <repo-address>
        helm repo ls 
        helm search repo <chart-name> [Search a chart in helm repo]

    Helm installation
        helm install <release-name> <repo-name>/<chart-name>
        helm ls

    Helm installation in a particular namespace
        kubectl create namespace <namespace-name>
        helm install <release-name> <repo-name>/<chart-name> --namespace <namespace-name>
        
    Helm - deleting release and repo
        helm uninstall <release-name> --namespace <namespace-name>
        helm repo remove <repo-name>
        
    Commands

        helm repo add ingress-nginx-repo https://kubernetes.github.io/ingress-nginx
        helm repo ls
        helm search repo ingress-nginx [Search a chart in helm repo]

        kubectl create namespace ingress-nginx
        helm install ingress-nginx ingress-nginx-repo/ingress-nginx --namespace ingress-nginx
        helm ls
	
3. Ingress-nginx Installation using Helm chart [command prompt]
	
    Microsoft Windows [Version 10.0.22621.3593]
    (c) Microsoft Corporation. All rights reserved.

    C:\Users\user>helm repo ls
        Error: no repositories to show

    C:\Users\user>helm ls
        NAME    NAMESPACE       REVISION        UPDATED STATUS  CHART   APP VERSION

    C:\Users\user>helm repo add ingress-nginx-repo https://kubernetes.github.io/ingress-nginx
        "ingress-nginx-repo" has been added to your repositories

    C:\Users\user>helm repo ls
        NAME                    URL
        ingress-nginx-repo      https://kubernetes.github.io/ingress-nginx

    C:\Users\user>helm search repo ingress-nginx
        NAME                                    CHART VERSION   APP VERSION     DESCRIPTION
        ingress-nginx-repo/ingress-nginx        4.10.1          1.10.1          Ingress controller for Kubernetes using NGINX a...

    C:\Users\user>kubectl create namespace ingress-nginx
        namespace/ingress-nginx created

    C:\Users\user>helm install ingress-nginx ingress-nginx-repo/ingress-nginx --namespace ingress-nginx
        NAME: ingress-nginx
        LAST DEPLOYED: Sat Jun  1 16:42:40 2024
        NAMESPACE: ingress-nginx
        STATUS: deployed
        REVISION: 1
        TEST SUITE: None
        NOTES:
        The ingress-nginx controller has been installed.
        It may take a few minutes for the load balancer IP to be available.
        You can watch the status by running 'kubectl get service --namespace ingress-nginx ingress-nginx-controller --output wide --watch'

        An example Ingress that makes use of the controller:
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
            name: example
            namespace: foo
        spec:
            ingressClassName: nginx
            rules:
            - host: www.example.com
                http:
                paths:
                    - pathType: Prefix
                    backend:
                        service:
                        name: exampleService
                        port:
                            number: 80
                    path: /
            # This section is only required if TLS is to be enabled for the Ingress
            tls:
            - hosts:
                - www.example.com
                secretName: example-tls

        If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

        apiVersion: v1
        kind: Secret
        metadata:
            name: example-tls
            namespace: foo
        data:
            tls.crt: <base64 encoded cert>
            tls.key: <base64 encoded key>
        type: kubernetes.io/tls

    C:\Users\user>kubectl get pods -n ingress-nginx
        NAME                                        READY   STATUS    RESTARTS   AGE
        ingress-nginx-controller-65487c9954-7rtxf   1/1     Running   0          2m54s

    C:\Users\user>kubectl get svc -n ingress-nginx
        NAME                                 TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)                      AGE
        ingress-nginx-controller             LoadBalancer   10.49.231.0     35.225.16.140   80:31107/TCP,443:30534/TCP   3m4s
        ingress-nginx-controller-admission   ClusterIP      10.49.228.149   <none>          443/TCP                      3m4s

    C:\Users\user>

4. Pods and Ingress rules deployment [command prompt]

    Microsoft Windows [Version 10.0.22621.3593]
    (c) Microsoft Corporation. All rights reserved.

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>kubectl apply -f frontend.yaml
        deployment.apps/frontend-deployment created
        service/frontend-service created

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>kubectl apply -f backend-auth.yaml
        deployment.apps/backend-auth-deployment created
        service/backend-auth-service created

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>kubectl get deployments
        NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
        backend-auth-deployment   1/1     1            1           49s
        frontend-deployment       1/1     1            1           114s

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>kubectl get svc
        NAME                   TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE
        backend-auth-service   ClusterIP   10.49.226.195   <none>        80/TCP    55s
        frontend-service       ClusterIP   10.49.230.22    <none>        80/TCP    119s
        kubernetes             ClusterIP   10.49.224.1     <none>        443/TCP   82d

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>kubectl apply -f store-ingress.yaml
        Warning: annotation "kubernetes.io/ingress.class" is deprecated, please use 'spec.ingressClassName' instead
        ingress.networking.k8s.io/store-ingress created

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>kubectl get ing
        NAME            CLASS    HOSTS         ADDRESS         PORTS   AGE
        store-ingress   <none>   mystore.com   35.225.16.140   80      60s

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>kubectl describe ing store-ingress
        Name:             store-ingress
        Labels:           <none>
        Namespace:        default
        Address:          35.225.16.140
        Ingress Class:    <none>
        Default backend:  <default>
        Rules:
        Host         Path  Backends
        ----         ----  --------
        mystore.com
                    /      frontend-service:80 (10.120.1.46:80)
                    /api   backend-auth-service:80 (10.120.1.47:4000)
        Annotations:   kubernetes.io/ingress.class: nginx
        Events:
        Type    Reason  Age                From                      Message
        ----    ------  ----               ----                      -------
        Normal  Sync    66s (x2 over 78s)  nginx-ingress-controller  Scheduled for sync

    D:\React\webpack-ts-unit-auth-proj\react-webpack-typescript\kubectl-deployments-yaml\kubernetes-cloud-deployments\gcp\ingress-setup\kyle-naveen-deployments>

5. Uninstallation Ingress-nginx controller using Helm chart [command prompt]

    C:\Users\user>helm uninstall ingress-nginx --namespace ingress-nginx
        release "ingress-nginx" uninstalled

    C:\Users\user>helm ls
        NAME    NAMESPACE       REVISION        UPDATED STATUS  CHART   APP VERSION

    C:\Users\user>kubectl get pods -n ingress-nginx
        No resources found in ingress-nginx namespace.

    C:\Users\user>kubectl get svc -n ingress-nginx
        No resources found in ingress-nginx namespace.

    C:\Users\user>helm repo remove ingress-nginx-repo
        "ingress-nginx-repo" has been removed from your repositories

    C:\Users\user>helm repo ls
        Error: no repositories to show

    C:\Users\user>helm search repo ingress-nginx
        Error: no repositories configured

    C:\Users\user>kubectl delete namespace ingress-nginx
        namespace "ingress-nginx" deleted

    C:\Users\user>

6. Ingress other references:

    Ingress controller without nginx:
        https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/

    Oracle: Setting Up an Nginx Ingress Controller on a Cluster
        https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengsettingupingresscontroller.htm

==================================================================================================================================================
==================================================================================================================================================

***********************************************[MINIKUBE] Nginx-controller-with-NodePort-and-clusterIP [NOT WORKING]*********************************************

url referred: https://docs.k0sproject.io/v1.24.4+k0s.0/examples/nginx-ingress/
--------------------------------------------------------------------------------------------------------------------------------------------------

Apply nginx config yaml from outsource

    D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/baremetal/deploy.yaml

        namespace/ingress-nginx created
        serviceaccount/ingress-nginx created
        serviceaccount/ingress-nginx-admission created
        role.rbac.authorization.k8s.io/ingress-nginx created
        role.rbac.authorization.k8s.io/ingress-nginx-admission created
        clusterrole.rbac.authorization.k8s.io/ingress-nginx created
        clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created
        rolebinding.rbac.authorization.k8s.io/ingress-nginx created
        rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
        clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created
        clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
        configmap/ingress-nginx-controller created
        service/ingress-nginx-controller created
        service/ingress-nginx-controller-admission created
        deployment.apps/ingress-nginx-controller created
        job.batch/ingress-nginx-admission-create created
        job.batch/ingress-nginx-admission-patch created
        ingressclass.networking.k8s.io/nginx created
        validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created

-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl get pods -n ingress-nginx

    NAME                                        READY   STATUS              RESTARTS   AGE
    ingress-nginx-admission-create-jb95k        0/1     Completed           0          11s
    ingress-nginx-admission-patch-75ht5         0/1     Completed           1          11s
    ingress-nginx-controller-675bfc9f4b-q4vnq   0/1     ContainerCreating   0          11s

D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl get pods -n ingress-nginx

    NAME                                        READY   STATUS      RESTARTS   AGE
    ingress-nginx-admission-create-jb95k        0/1     Completed   0          25s
    ingress-nginx-admission-patch-75ht5         0/1     Completed   1          25s
    ingress-nginx-controller-675bfc9f4b-q4vnq   0/1     Running     0          25s
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl get services -n ingress-nginx

    NAME                                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE
    ingress-nginx-controller             NodePort    10.96.1.99      <none>        80:32700/TCP,443:32043/TCP   27s
    ingress-nginx-controller-admission   ClusterIP   10.101.248.17   <none>        443/TCP                      27s
-----------------------------------------------------------------------------------------------------------------------------------------------

If this is only instance of the Ingresss-NGINX controller, you should add the annotation

    D:\React\react-webpack-typescript\kubectl-deployments-yaml>kubectl -n ingress-nginx annotate ingressclasses nginx ingressclass.kubernetes.io/is-default-class="true"
    ingressclass.networking.k8s.io/nginx annotate
-----------------------------------------------------------------------------------------------------------------------------------------------

Till now nginx server has been created, but the nodeport service of the nginx has no external IP to curl or hit from the browser, so minikube tunneling

    D:\React\react-webpack-typescript\kubectl-deployments-yaml>minikube service ingress-nginx-controller --url

        X Exiting due to SVC_NOT_FOUND: Service 'ingress-nginx-controller' was not found in 'default' namespace.
        You may select another namespace by using 'minikube service ingress-nginx-controller -n <namespace>'. Or list out all the services using 'minikube service list'


    D:\React\react-webpack-typescript\kubectl-deployments-yaml>minikube service ingress-nginx-controller --url -n ingress-nginx
    
        http://127.0.0.1:50524
        http://127.0.0.1:50525
        ! Because you are using a Docker driver on windows, the terminal needs to be open to run it.

-----------------------------------------------------------------------------------------------------------------------------------------------

Minikube addons to enable ingress.
    command: minikube addons enable ingress

-----------------------------------------------------------------------------------------------------------------------------------------------

Apply all yaml configs for deployment - deployment, service in one yaml
    D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>kubectl apply -f nginx-dep-all-configs.yaml

        namespace/shopping-cart created
        deployment.apps/shopping-cart-deployment-nginx created
        service/web-server-service created
        ingress.networking.k8s.io/web-server-ingress created
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>kubectl get svc -n shopping-cart

    NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
    web-server-service   ClusterIP   10.109.247.195   <none>        8080/TCP   109s
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>kubectl get all -n shopping-cart

    NAME                                                  READY   STATUS    RESTARTS   AGE
    pod/shopping-cart-deployment-nginx-649f7bdb55-jw97n   1/1     Running   0          4m56s

    NAME                         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
    service/web-server-service   ClusterIP   10.109.247.195   <none>        8080/TCP   4m56s

    NAME                                             READY   UP-TO-DATE   AVAILABLE   AGE
    deployment.apps/shopping-cart-deployment-nginx   1/1     1            1           4m56s

    NAME                                                        DESIRED   CURRENT   READY   AGE
    replicaset.apps/shopping-cart-deployment-nginx-649f7bdb55   1         1         1       4m56s
-----------------------------------------------------------------------------------------------------------------------------------------------

D:\React\react-webpack-typescript\kubectl-deployments-yaml\2-nginx-clusterIP>minikube service ingress-nginx-controller --url -n ingress-nginx
    http://127.0.0.1:51799
    http://127.0.0.1:51800
    ! Because you are using a Docker driver on windows, the terminal needs to be open to run it.

*******************Not working - Need to check: The nginx is not connecting to the ingress controllers to route to the desired pod***************

-----------------------------------------------------------------------------------------------------------------------------------------------